@import 'variables.sass';

$bg: 'bg';
$icon-color: 'icon-color';
$card-bg: 'card-bg';
$text-color: 'text-color';
$text-color-inverted: 'text-color-inverted';
$bg-inverted: 'bg-inverted';
$border-color-inverted: 'border-color-inverted';

$text-secondary: 'text-secondary';
$link: 'link';
$hover: 'hover';
$logo: 'logo';
$brand-blue: 'brand-blue';
$brand-red: 'brand-red';
$line-color: 'line-color';
$bord-color: 'bord-color';
$shad: 'shad';
$hl: 'hl';
$bg-articles: 'bg-articles';

$themes: (
  light: (
          bg: $bg-color-light,
          bg-inverted: $dark-primary-color,
          text-color: $dark-primary-color,
          text-color-inverted: $white-color,
          border-color-inverted: $white-color,
          // icon-color: $dark-gray-icons,
          // line-color: $lines-color,
          // bord-color: $border-color,
          // shad: $shadow,
          // hl: $hight-light-gray,
          // bg-articles: $bg-color-light-additional
  ),
  dark: (
          bg: $bg-color-night,
          bg-inverted: $bg-color-light,        
          text-color: $white-color,
          text-color-inverted: $dark-primary-color,
          border-color-inverted: $dark-primary-color,
          // icon-color: white,
          // line-color: $lines-color-night,
          // bord-color: $border-color,
          // shad: $shadow-night,
          // hl: $bg-color-night,
          // bg-articles: $bg-color-night
  ),
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function getStyle($key) {
  @return map-get($theme-map, $key);
}